Program state
ID: 1 
Exe Stack: {(int v;(v=0;(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10))))) | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(v=0;(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10)))) | int v | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(v=0;(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10)))) | int v | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(v=0;(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10)))) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(v=0;(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10)))) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10))) | v=0 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10))) | v=0 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10))) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(while (v<3) {(fork((print(v);v=v+1));v=v+1)};(sleep( 5 );print(v*10))) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | (fork((print(v);v=v+1));v=v+1) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | (fork((print(v);v=v+1));v=v+1) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | fork((print(v);v=v+1)) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | fork((print(v);v=v+1)) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(print(v);v=v+1) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(print(v);v=v+1) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | } 
Sym Table: v->1,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {v=v+1 | print(v) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | } 
Sym Table: v->1,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {v=v+1 | print(v) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | (fork((print(v);v=v+1));v=v+1) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 10 
Exe Stack: {v=v+1 | } 
Sym Table: v->0,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | (fork((print(v);v=v+1));v=v+1) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 10 
Exe Stack: {v=v+1 | } 
Sym Table: v->0,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | fork((print(v);v=v+1)) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 10 
Exe Stack: {} 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | fork((print(v);v=v+1)) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(print(v);v=v+1) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(print(v);v=v+1) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | } 
Sym Table: v->2,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 100 
Exe Stack: {v=v+1 | print(v) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | } 
Sym Table: v->2,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 100 
Exe Stack: {v=v+1 | print(v) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | (fork((print(v);v=v+1));v=v+1) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 100 
Exe Stack: {v=v+1 | } 
Sym Table: v->1,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | (fork((print(v);v=v+1));v=v+1) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 100 
Exe Stack: {v=v+1 | } 
Sym Table: v->1,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | fork((print(v);v=v+1)) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 100 
Exe Stack: {} 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | fork((print(v);v=v+1)) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(print(v);v=v+1) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | v=v+1 | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(print(v);v=v+1) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {v=v+1 | print(v) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | while (v<3) {(fork((print(v);v=v+1));v=v+1)} | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {v=v+1 | print(v) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {v=v+1 | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(sleep( 5 );print(v*10)) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {v=v+1 | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 5 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {} 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 5 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 4 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 4 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 3 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 3 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 2 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 2 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 1 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 1 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 0 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | sleep( 0 ) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {} 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2 30  
File Table:  
 


