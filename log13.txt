Program state
ID: 1 
Exe Stack: {(int v;(v=0;(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))))))) | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(v=0;(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))))) | int v | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(v=0;(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))))) | int v | } 
Sym Table:  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(v=0;(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))))) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(v=0;(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))))) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))))) | v=0 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))))) | v=0 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))))) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3;(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))))) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | repeat{ 
(fork((print(v);v=v-1));v=v+1)
} until v==3 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | ((fork((print(v);v=v-1));v=v+1);while (!v==3) {(fork((print(v);v=v-1));v=v+1)}) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | ((fork((print(v);v=v-1));v=v+1);while (!v==3) {(fork((print(v);v=v-1));v=v+1)}) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | (fork((print(v);v=v-1));v=v+1) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | (fork((print(v);v=v-1));v=v+1) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | fork((print(v);v=v-1)) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | fork((print(v);v=v-1)) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(print(v);v=v-1) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {(print(v);v=v-1) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | } 
Sym Table: v->1,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {v=v-1 | print(v) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | } 
Sym Table: v->1,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 10 
Exe Stack: {v=v-1 | print(v) | } 
Sym Table: v->0,  
Heap:  
Output Console:  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | (fork((print(v);v=v-1));v=v+1) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 10 
Exe Stack: {v=v-1 | } 
Sym Table: v->0,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | (fork((print(v);v=v-1));v=v+1) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 10 
Exe Stack: {v=v-1 | } 
Sym Table: v->0,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | fork((print(v);v=v-1)) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 10 
Exe Stack: {} 
Sym Table: v->-1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | fork((print(v);v=v-1)) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(print(v);v=v-1) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 100 
Exe Stack: {(print(v);v=v-1) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | } 
Sym Table: v->2,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 100 
Exe Stack: {v=v-1 | print(v) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | } 
Sym Table: v->2,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 100 
Exe Stack: {v=v-1 | print(v) | } 
Sym Table: v->1,  
Heap:  
Output Console: 0  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | (fork((print(v);v=v-1));v=v+1) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 100 
Exe Stack: {v=v-1 | } 
Sym Table: v->1,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | (fork((print(v);v=v-1));v=v+1) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 100 
Exe Stack: {v=v-1 | } 
Sym Table: v->1,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | fork((print(v);v=v-1)) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 100 
Exe Stack: {} 
Sym Table: v->0,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | fork((print(v);v=v-1)) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(print(v);v=v-1) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | v=v+1 | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {(print(v);v=v-1) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {v=v-1 | print(v) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | while (!v==3) {(fork((print(v);v=v-1));v=v+1)} | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {v=v-1 | print(v) | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {v=v-1 | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int x;(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))))) | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {v=v-1 | } 
Sym Table: v->2,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))) | int x | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1000 
Exe Stack: {} 
Sym Table: v->1,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))) | int x | } 
Sym Table: v->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))) | } 
Sym Table: v->3, x->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int y;(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))))) | } 
Sym Table: v->3, x->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))) | int y | } 
Sym Table: v->3, x->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))) | int y | } 
Sym Table: v->3, x->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))) | } 
Sym Table: v->3, x->0, y->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int z;(int w;(x=1;(y=2;(z=3;(w=4;print(v*10))))))) | } 
Sym Table: v->3, x->0, y->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))) | int z | } 
Sym Table: v->3, x->0, y->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))) | int z | } 
Sym Table: v->3, x->0, y->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))) | } 
Sym Table: v->3, x->0, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(int w;(x=1;(y=2;(z=3;(w=4;print(v*10)))))) | } 
Sym Table: v->3, x->0, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(x=1;(y=2;(z=3;(w=4;print(v*10))))) | int w | } 
Sym Table: v->3, x->0, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(x=1;(y=2;(z=3;(w=4;print(v*10))))) | int w | } 
Sym Table: v->3, x->0, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(x=1;(y=2;(z=3;(w=4;print(v*10))))) | } 
Sym Table: v->3, w->0, x->0, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(x=1;(y=2;(z=3;(w=4;print(v*10))))) | } 
Sym Table: v->3, w->0, x->0, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(y=2;(z=3;(w=4;print(v*10)))) | x=1 | } 
Sym Table: v->3, w->0, x->0, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(y=2;(z=3;(w=4;print(v*10)))) | x=1 | } 
Sym Table: v->3, w->0, x->0, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(y=2;(z=3;(w=4;print(v*10)))) | } 
Sym Table: v->3, w->0, x->1, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(y=2;(z=3;(w=4;print(v*10)))) | } 
Sym Table: v->3, w->0, x->1, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(z=3;(w=4;print(v*10))) | y=2 | } 
Sym Table: v->3, w->0, x->1, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(z=3;(w=4;print(v*10))) | y=2 | } 
Sym Table: v->3, w->0, x->1, y->0, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(z=3;(w=4;print(v*10))) | } 
Sym Table: v->3, w->0, x->1, y->2, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(z=3;(w=4;print(v*10))) | } 
Sym Table: v->3, w->0, x->1, y->2, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(w=4;print(v*10)) | z=3 | } 
Sym Table: v->3, w->0, x->1, y->2, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(w=4;print(v*10)) | z=3 | } 
Sym Table: v->3, w->0, x->1, y->2, z->0,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(w=4;print(v*10)) | } 
Sym Table: v->3, w->0, x->1, y->2, z->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {(w=4;print(v*10)) | } 
Sym Table: v->3, w->0, x->1, y->2, z->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | w=4 | } 
Sym Table: v->3, w->0, x->1, y->2, z->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | w=4 | } 
Sym Table: v->3, w->0, x->1, y->2, z->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | } 
Sym Table: v->3, w->4, x->1, y->2, z->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {print(v*10) | } 
Sym Table: v->3, w->4, x->1, y->2, z->3,  
Heap:  
Output Console: 0 1 2  
File Table:  
 


Program state
ID: 1 
Exe Stack: {} 
Sym Table: v->3, w->4, x->1, y->2, z->3,  
Heap:  
Output Console: 0 1 2 30  
File Table:  
 


